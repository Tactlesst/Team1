{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SRCB-IT-ADMIN/Documents/GitHub/Team1/Team12/pages/_document.js"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\r\n\r\nexport default function Document() {\r\n  return (\r\n    <Html lang=\"en\">\r\n      <Head />\r\n      <body className=\"antialiased\">\r\n        <Main />\r\n        <NextScript />\r\n      </body>\r\n    </Html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SRCB-IT-ADMIN/Documents/GitHub/Team1/Team12/pages/_app.js"],"sourcesContent":["import \"@/styles/globals.css\";\r\n\r\nexport default function App({ Component, pageProps }) {\r\n  return <Component {...pageProps} />;\r\n}\r\n"],"names":[],"mappings":";;;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;IAClD,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SRCB-IT-ADMIN/Documents/GitHub/Team1/Team12/pages/users.js"],"sourcesContent":["import { useState, useEffect } from 'react'; // Import useState and useEffect\r\nexport async function getServerSideProps() {\r\n    const res = await fetch('http://localhost:3000/api/data');\r\n    const users = await res.json();\r\n\r\n    return { props: { users } };\r\n}\r\n\r\nexport default function UsersPage({ users }) {\r\n    const [sortedUsers, setSortedUsers] = useState(users); // State for sorted users\r\n    const [sortKey, setSortKey] = useState(null); // State for the current sort key\r\n    const [sortDirection, setSortDirection] = useState('asc'); // State for sort direction\r\n\r\n    // Function to handle sorting\r\n    const handleSort = (key) => {\r\n        if (key === sortKey) {\r\n            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n        } else {\r\n            setSortKey(key);\r\n            setSortDirection('asc');\r\n        }\r\n\r\n        const sorted = [...users].sort((a, b) => {\r\n            const aValue = a[key]?.toString().toLowerCase() || ''; // Handle null/undefined\r\n            const bValue = b[key]?.toString().toLowerCase() || '';\r\n            const order = sortDirection === 'asc' ? 1 : -1;\r\n            return aValue.localeCompare(bValue) * order;\r\n        });\r\n        setSortedUsers(sorted);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {/* Dynamically generate table headers */}\r\n                        {Object.keys(users[0] || {}).map(key => (\r\n                            <th key={key} onClick={() => handleSort(key)} style={{ cursor: 'pointer' }}>\r\n                                {key}\r\n                                {sortKey === key && (sortDirection === 'asc' ? ' ▲' : ' ▼')} {/* Sort indicator */}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {sortedUsers.map(user => (\r\n                        <tr key={user.id}>\r\n                            {/* Dynamically generate table cells */}\r\n                            {Object.keys(users[0] || {}).map(key => (\r\n                                <td key={key}>{user[key]}</td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":";;;;;AAAA,6KAA6C,gCAAgC;;;AACtE,eAAe;IAClB,MAAM,MAAM,MAAM,MAAM;IACxB,MAAM,QAAQ,MAAM,IAAI,IAAI;IAE5B,OAAO;QAAE,OAAO;YAAE;QAAM;IAAE;AAC9B;AAEe,SAAS,UAAU,EAAE,KAAK,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,yBAAyB;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,iCAAiC;IAC/E,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,2BAA2B;IAEtF,6BAA6B;IAC7B,MAAM,aAAa,CAAC;QAChB,IAAI,QAAQ,SAAS;YACjB,iBAAiB,kBAAkB,QAAQ,SAAS;QACxD,OAAO;YACH,WAAW;YACX,iBAAiB;QACrB;QAEA,MAAM,SAAS;eAAI;SAAM,CAAC,IAAI,CAAC,CAAC,GAAG;YAC/B,MAAM,SAAS,CAAC,CAAC,IAAI,EAAE,WAAW,iBAAiB,IAAI,wBAAwB;YAC/E,MAAM,SAAS,CAAC,CAAC,IAAI,EAAE,WAAW,iBAAiB;YACnD,MAAM,QAAQ,kBAAkB,QAAQ,IAAI,CAAC;YAC7C,OAAO,OAAO,aAAa,CAAC,UAAU;QAC1C;QACA,eAAe;IACnB;IAEA,qBACI,qKAAC;;0BACG,qKAAC;0BAAG;;;;;;0BACJ,qKAAC;;kCACG,qKAAC;kCACG,cAAA,qKAAC;sCAEI,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA,oBAC7B,qKAAC;oCAAa,SAAS,IAAM,WAAW;oCAAM,OAAO;wCAAE,QAAQ;oCAAU;;wCACpE;wCACA,YAAY,OAAO,CAAC,kBAAkB,QAAQ,OAAO,IAAI;wCAAE;;mCAFvD;;;;;;;;;;;;;;;kCAOrB,qKAAC;kCACI,YAAY,GAAG,CAAC,CAAA,qBACb,qKAAC;0CAEI,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA,oBAC7B,qKAAC;kDAAc,IAAI,CAAC,IAAI;uCAAf;;;;;+BAHR,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;AAWxC"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}